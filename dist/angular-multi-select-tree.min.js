!function(){"use strict";angular.module("multi-select-tree",[])}(),function(){"use strict";var a=angular.module("multi-select-tree");a.controller("multiSelectTreeCtrl",["$scope","$document",function(a,b){function c(){d(),a.$apply()}function d(){a.showTree=!1,g&&(g.isActive=!1,g=void 0),b.off("click",c)}function e(b){for(var c=0,d=b.length;c<d;c++)f(b[c])||b[c].selected!==!0?f(b[c])&&b[c].selected===!1&&(b[c].selected=!0):a.selectedItems.push(b[c]),b[c]&&b[c].children&&e(b[c].children)}function f(b){var c=!1;if(a.selectedItems)for(var d=0;d<a.selectedItems.length;d++)if(a.selectedItems[d].id===b.id){c=!0;break}return c}var g;a.showTree=!1,a.selectedItems=[],a.multiSelect=a.multiSelect||!1,a.onActiveItem=function(a){g!==a&&(g&&(g.isActive=!1),g=a,g.isActive=!0)},a.refreshOutputModel=function(){a.outputModel=angular.copy(a.selectedItems)},a.refreshSelectedItems=function(){a.selectedItems=[],a.inputModel&&e(a.inputModel)},a.deselectItem=function(b,c){c.stopPropagation(),a.selectedItems.splice(a.selectedItems.indexOf(b),1),b.selected=!1,this.refreshOutputModel()},a.onControlClicked=function(d){d.stopPropagation(),a.showTree=!a.showTree,a.showTree&&b.on("click",c)},a.onFilterClicked=function(a){a.stopPropagation()},a.clearFilter=function(b){b.stopPropagation(),a.filterKeyword=""},a.canSelectItem=function(b){return a.callback({item:b,selectedItems:a.selectedItems})},a.switchCurrentView=function(b){b.stopPropagation(),a.switchViewCallback({scopeObj:a})},a.itemSelected=function(b){if(!(a.useCallback&&a.canSelectItem(b)===!1||a.selectOnlyLeafs&&b.children&&b.children.length>0)){if(a.multiSelect){b.selected=!0;var c=a.selectedItems.indexOf(b);f(b)?(b.selected=!1,a.selectedItems.splice(c,1),i(b)):(a.selectedItems.push(b),h(b))}else{d();for(var e=0;e<a.selectedItems.length;e++)a.selectedItems[e].selected=!1;b.selected=!0,a.selectedItems=[],a.selectedItems.push(b)}this.refreshOutputModel()}};var h=function b(c){if(c.children)for(var d=0;d<c.children.length;d++){var e=c.children[d];f(e)||(e.selected=!0,a.selectedItems.push(e)),b(e)}},i=function b(c){if(c.children)for(var d=0;d<c.children.length;d++){var e=c.children[d];if(f(e)){e.selected=!1;var g=a.selectedItems.indexOf(e);a.selectedItems.splice(g,1)}b(e)}}}]),a.directive("multiSelectTree",function(){return{restrict:"E",templateUrl:"src/multi-select-tree.tpl.html",scope:{inputModel:"=",outputModel:"=?",multiSelect:"=?",switchView:"=?",switchViewLabel:"@",switchViewCallback:"&",selectOnlyLeafs:"=?",callback:"&",defaultLabel:"@"},link:function(a,b,c){function d(a,b){for(var c=e(a,[]),d=0,f=c.length;d<f;d++)if(c[d].name.toLowerCase().indexOf(b.toLowerCase())!==-1)return!1;return!0}function e(a,b){if(!a.children)return[];for(var c=0;c<a.children.length;c++)b.push(a.children[c]),e(a.children[c],b);return b}c.callback&&(a.useCallback=!0),a.$watch("inputModel",function(b){b&&(a.refreshSelectedItems(),a.refreshOutputModel())}),a.$watch("filterKeyword",function(){void 0!==a.filterKeyword&&angular.forEach(a.inputModel,function(b){b.name.toLowerCase().indexOf(a.filterKeyword.toLowerCase())!==-1?b.isFiltered=!1:d(b,a.filterKeyword)?b.isFiltered=!0:b.isFiltered=!1})})},controller:"multiSelectTreeCtrl"}})}(),function(){"use strict";var a=angular.module("multi-select-tree");a.controller("treeItemCtrl",["$scope",function(a){a.item.isExpanded=!1,a.showExpand=function(a){return a.children&&a.children.length>0},a.onExpandClicked=function(a,b){b.stopPropagation(),a.isExpanded=!a.isExpanded},a.clickSelectItem=function(b,c){c.stopPropagation(),a.itemSelected&&a.itemSelected({item:b})},a.subItemSelected=function(b,c){a.itemSelected&&a.itemSelected({item:b})},a.activeSubItem=function(b,c){a.onActiveItem&&a.onActiveItem({item:b})},a.onMouseOver=function(b,c){c.stopPropagation(),a.onActiveItem&&a.onActiveItem({item:b})},a.showCheckbox=function(){return!a.selectOnlyLeafs}}]),a.directive("treeItem",["$compile",function(a){return{restrict:"E",templateUrl:"src/tree-item.tpl.html",scope:{item:"=",itemSelected:"&",onActiveItem:"&",multiSelect:"=?",selectOnlyLeafs:"=?",isActive:"=",useCallback:"=",canSelectItem:"="},controller:"treeItemCtrl",compile:function(b,c,d){angular.isFunction(d)&&(d={post:d});var e,f=b.contents().remove();return{pre:d&&d.pre?d.pre:null,post:function(b,c,g){e||(e=a(f)),e(b,function(a){c.append(a)}),d&&d.post&&d.post.apply(null,arguments)}}}}}])}(),angular.module("multi-select-tree").run(["$templateCache",function(a){"use strict";a.put("src/multi-select-tree.tpl.html",'<div class="tree-control">\n\n    <div class="tree-input" ng-click="onControlClicked($event)">\n      <span ng-if="selectedItems.length == 0" class="selected-items">\n        <span ng-bind="defaultLabel"></span>\n      </span>\n\n      <span ng-if="selectedItems.length > 0 && selectedItems.length <= 1" class="selected-items">\n        <span ng-repeat="selectedItem in selectedItems" class="selected-item">\n          <span ng-bind="selectedItem.name"></span>\n          <span class="selected-item-close" ng-click="deselectItem(selectedItem, $event)"></span>\n        </span>\n        <span class="caret"></span>\n      </span>\n\n      <span ng-if="selectedItems.length > 1" class="selected-items">Multiple selected</span>\n          <!-- <input type="text" class="blend-in" /> -->\n    </div>\n\n    <div class="tree-view" ng-show="showTree">\n        <div class="helper-container">\n            <div class="line">\n                <input placeholder="Search..." type="text" ng-model="filterKeyword" ng-click="onFilterClicked($event)" class="input-filter">\n                <span class="clear-button" ng-click="clearFilter($event)">\n                  <span class="item-close"></span>\n                </span>\n            </div>\n        </div>\n        <ul class="tree-container">\n            <tree-item class="top-level" ng-repeat="item in inputModel" item="item" ng-show="!item.isFiltered"\n                       use-callback="useCallback" can-select-item="canSelectItem"\n                       multi-select="multiSelect" item-selected="itemSelected(item)"\n                       on-active-item="onActiveItem(item)" select-only-leafs="selectOnlyLeafs"></tree-item>\n        </ul>\n    </div>\n</div>\n'),a.put("src/tree-item.tpl.html",'<li>\n    <div class="item-container" ng-class="{active: item.isActive, selected: item.selected}" ng-click="clickSelectItem(item, $event)" ng-mouseover="onMouseOver(item, $event)">\n\n        <!-- Show selected items -->\n        <span ng-if="showExpand(item)" ng-click="onExpandClicked(item, $event)" style="    width: 30px;\n    height: 30px;\n    padding-top: 5px;\n    display: inline-block;\n    text-align: center;">\n              <i class="expand" ng-class="{\'expand-opened\': item.isExpanded}"></i>\n        </span>\n\n        <div class="item-details">\n          <span ng-bind="item.name"></span>\n          <input class="tree-checkbox" type="checkbox" ng-if="showCheckbox()" ng-checked="item.selected"/>\n        </div>\n    </div>\n    <ul ng-repeat="child in item.children" ng-if="item.isExpanded">\n        <tree-item item="child" item-selected="subItemSelected(item)" use-callback="useCallback"\n                   can-select-item="canSelectItem" multi-select="multiSelect"\n                   on-active-item="activeSubItem(item, $event)"></tree-item>\n    </ul>\n</li>\n')}]);